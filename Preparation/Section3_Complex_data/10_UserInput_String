#include <iostream>
#include <cstring>

using namespace std;

int main() {
    //사용자 입력
    const int Size = 15;
    char name1[Size];
    char name2[Size] = "C++programing";

    cout << "안녕하세요! 저는 " << name2;
    cout << "입니다! 성함이 어떻게 되시나요?\n";
    //cin >> name1;       // cin은 공백을 문자열의 끝으로 인식한다. 따라서 스페이스바를 인식하지 못한다.
    // cin.get(name1, Size);       // 공백 역시 문자열의 일부로 받아들인다.
    cin.getline(name1, Size)    // 위와 동일하게 동작.
    cout << "음, " << name1 << "씨, 당신의 이름은 ";
    cout << strlen(name1) << "자입니다만\n";
    cout << sizeof(name1) << "바이트 크기의 배열에 저장되었습니다. \n";
    cout << "이름이 " << name1[0] << "자로 시작하는군요.\n";
    name2[3] = '\0';
    cout << "제 이름의 처음 세 문자는 다음과 같습니다: ";
    cout << name2 << endl;

    return 0;
}


===========================================================================================================
#include <iostream>

using namespace std;

int main() {
    /*
    * C++에서 문자를 다루는 방법 중 하나인 string
     1) C 스타일로 string 객체를 초기화할 수 있다.
     2) cin을 사용하여 string 객체에 키보드 입력을 저장할 수 있다.
     3) cout을 사용하여 string 객체를 디스플레이할 수 있다.
     4) 배열 표기를 사용하여 string 객체에 저장되어 있는 개별적인 문자들에 접근할 수 있다.
     5) 배열을 다른 배열에 통째로 입력할 수는 없다. 그러나 string에서는 가능하다!
    */

    char char1[20];
    char char2[20] = "jaguar";
    string str1;
    string str2 = "panda";
    //char1 = char2; // 이렇게 코드를 짜면 안된다.
    str1 = str2; // 이렇게 해도 된다.
    cout << str1 << endl;
    return 0;
}

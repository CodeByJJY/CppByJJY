#include <iostream>

using namespace std;

int main() {
	// 추상화와 클래스
	// 데이터형이란 무엇인가?
	// 데이터형을 대상으로 어떠한 연산을 수행할 수 있는가?

	// int형은 사칙연산+나머지 연산까지 전부 수행할 수 있지만
	int a = 3;
	int b = 4;
	cout << sizeof(a) << "byte" << endl;

	// 포인터끼리는 연산을 할 수 없다.
	int* a_ = &a;
	int* b_ = &b;
	cout << sizeof(a_) << "byte" << endl;

	return 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Stock.h
#ifndef STOCK
#define STOCK				// 매크로 이름은 무조건 영어 대문자로 할 것!
#include <iostream>

using namespace std;

class Stock
{
	// private
	/*
	* 비공개 멤버
	* 클래스 내에서만 접근 가능
	* 직접적인 Data는 private로 선언하여 데이터를 은닉하자.
	*/
private:									// private : 직접적으로 접근해서 값을 변경할 수 없다. -> 데이터 은닉
	string name;
	int shares;
	float share_val;
	double total_val;
	void set_total() { total_val = shares * share_val; }
	// public
	/*
	* 공개 멤버, 클래스
	* 외부에서도 접근 가능
	*/
public:									// public 에 정의된 함수들을 통해 public의 변수들을 변경할 수 있다.
	void acquire(string, int, float);
	void buy(int, float);
	void sell(int, float);
	void update(float);
	void show();
	Stock();
	~Stock();
};
#endif
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// func.cpp
#include <iostream>
#include "Stock.h"

// acquire : 주식 선언
void Stock::acquire(string co, int n, float pr) {
	name = co;			// 주식 이름
	shares = n;			// 주식 개수
	share_val = pr;		// 주가
	set_total();
}

// buy : 주식 매수
void Stock::buy(int n, float pr) {
	shares += n;
	share_val = pr;
	set_total();
}

// sell : 주식 매도
void Stock::sell(int n, float pr) {
	shares -= n;
	share_val = pr;
	set_total();
}

// update : 주가 업데이트
void Stock::update(float pr) {
	share_val = pr;
	set_total();
}

// show : 주식의 내용 출력
void Stock::show() {
	cout << "회사 명 : " << name << endl;
	cout << "주식 수 : " << shares << endl;
	cout << "주가 : " << share_val << endl;
	cout << "주식 총 가치 : " << total_val << endl;
}

// 사용 범위 결정 연산자 ::
// 생성자
Stock::Stock()
{

}

// 소멸자
Stock::~Stock()
{

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// main.cpp
#include <iostream>
#include "Stock.h"

int main() {
	// 추상화와 클래스
	// 클래스란?
	// 추상화를 사용자 정의 데이터형으로 변환해주는 수단
	// 추상화란?
	/*
	어떠한 객체를 사실적으로 표현하는 것이 아니라, 
	공통된 특징을 간결한 방식으로, 이해하기 쉽게 표현하는 것.
	*/
	/*
	1. 클래스 선언
	2. 클래스 매서드 정의
	*/
	Stock temp;
	temp.acquire("Panda", 100, 1000);
	temp.show();
	temp.buy(10, 1200);
	temp.show();
	temp.sell(5, 800);
	temp.show();

	return 0;
}
